>>> add_integer = __import__('0-add_integer').add_integer

add_integer is a function that adds two integers
-> Prototype: def add_integer(a, b=98):
    ->notice that the value of b is already known
-> this function accepts no ther types besides integers and floats
-> if it a float it converts to an integer
-> in this text file you will find a break down of all the possible cases
---
#case.1 two positive integers
>>> print(add_integer(1, 1))
2

---
#case.2 one of the two integers is negative
>>> print(add_integer(1, -2)) 
-1

>>> print(add_integer(-1, 2)) 
1

---
#case.3 two negative integers
>>> print(add_integer(-1, -2)) 
-3

---
#case.4 give only one value
>>> print(add_integer(1))
99

---
#case.5 one of the two values is a float
>>> print(add_integer(1.6, 1))  
2

---
#case.6 two floats
>>> print(add_integer(1.6, 1.2)) 
2

---
#case.7 neither of the two values is an integer nor a float
>>> print(add_integer(4, "Hi"))
Traceback (most recent call last):
    ...
TypeError: b must be an integer

>>> print(add_integer([2,7,8], 4)) 
Traceback (most recent call last):
    ...
TypeError: a must be an integer

---
case.8 what if we typed a random thing
>>> print(add_integer(kg))  
Traceback (most recent call last):
NameError: name 'kg' is not defined

---
#case.9 what if we dont give a value at all
>>> print(add_integer(None))
Traceback (most recent call last):
    ...
TypeError: a must be an integer
